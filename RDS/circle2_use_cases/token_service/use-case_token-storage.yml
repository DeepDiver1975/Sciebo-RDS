openapi: 3.0.0
info:
  title: Token Storage
  version: '1.0'
  contact:
    name: Peter Heiss
    email: peter.heiss@uni-muenster.de
  description: 'This file describes a service, which takes oauth2 flow for rds. This is a extra layer for the central service.'
servers:
  - url: 'http://use-case_token-storage:3000'
paths:
  /redirect:
    get:
      summary: Redirect the user to the specified uri
      tags: []
      responses:
        '302':
          description: Found
      description: |-
        This endpoint takes all tokens to send it to the central-service to save them there and redirects user to `/authorization-success` or `/authorization-cancel`, if anything is wrong with the given data.

        please specify this endpoint when asked for a redirect-uri.
      parameters: []
    parameters: []
  '/service/{servicename}':
    parameters:
      - schema:
          type: string
        name: servicename
        in: path
        required: true
    get:
      summary: Returns authorize-url from service.
      tags: []
      responses:
        '200':
          description: |-
            OK

            For the jwt string, take a look at the jwt model.
          content:
            application/json:
              schema:
                type: object
                properties:
                  jwt:
                    type: string
        '302':
          description: Found
      description: |-
        This is the normally known `/authorize` URL for oauth2 providers. If http-headers say, it is a machine, it returns a 200 code and give all informations for a manual redirect. Otherwise it redirects to the `/authorize` pages for the oauth2-providers with all needed service relevant informations like client_id.

        This is for easier usability, so you don't have to pull the services before.
  /authorization-success:
    get:
      summary: Returns success page
      tags: []
      responses:
        '200':
          description: OK
      description: 'Like ownclouds: index.php/apps/oauth2/authorization-successful'
    parameters: []
  /authorization-cancel:
    get:
      summary: Returns cancel page
      tags: []
      responses:
        '200':
          description: OK
      description: This endpoint represents an invalid oauth2 process.
    parameters: []
  /service:
    get:
      summary: Returns all available services
      tags: []
      responses:
        '200':
          description: |-
            OK

            For the jwt string, take a look at the jwt model.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    jwt:
                      type: string
      description: Returns all available services.
  '/user/{user-id}/service':
    parameters:
      - schema:
          type: string
        name: user-id
        in: path
        required: true
    get:
      summary: Get services from user-id
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  length:
                    type: integer
                  list:
                    type: array
                    items:
                      type: object
                      properties:
                        servicename:
                          type: string
      operationId: ''
      description: Returns all services which the user is registered for.
  '/user/{user-id}/service/{servicename}':
    parameters:
      - schema:
          type: string
        name: user-id
        in: path
        required: true
      - schema:
          type: string
        name: servicename
        in: path
        required: true
    get:
      summary: ''
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
      operationId: ''
      description: Get current access token for service.
    delete:
      summary: Delete the service from user
      operationId: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
      description: Remove the user token for service.
components:
  schemas:
    oauth_uri:
      title: OAuth2 URL
      type: object
      description: ''
      properties:
        redirect_uri_full:
          type: string
          description: 'A complete uri with client id, type and redirect_uri.'
        redirect_uri:
          type: string
        client_id:
          type: string
        response_type:
          type: string
        authorize_uri:
          type: string
    oauth:
      title: oauth
      type: object
      properties:
        id:
          type: string
        service:
          type: string
        username:
          type: string
        refresh_token:
          type: string
        access_token:
          type: string
    jwt:
      title: jwt
      type: object
      properties:
        servicename:
          type: string
        authorize_url:
          type: string
        date:
          type: string
      description: 'This string is a jwt, so it follows the structure: header.payload.signature. The payload follows the defined struct below.'
