openapi: 3.0.0
info:
  version: '1.0'
  title: Central Service Project Manager
  description: 'This api describes the project endpoints, which manages projects and workflows.'
  contact:
    name: Peter Heiss
    email: peter.heiss@uni-muenster.de
paths:
  /:
    get:
      summary: Sitemap
      tags: []
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
      operationId: api.sitemap.index
      parameters: []
      description: Returns all projects.
    parameters: []
  '/{user-id}':
    parameters:
      - schema:
          type: string
        name: user-id
        in: path
        required: true
    get:
      summary: List all projects from given user
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        '404':
          description: Not Found
      operationId: api.user.get
    post:
      summary: Add a project to user
      operationId: api.user.post
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
  '/{user-id}/project/{project-id}':
    parameters:
      - schema:
          type: string
        name: user-id
        in: path
        required: true
      - schema:
          type: string
        name: project-id
        in: path
        required: true
    get:
      summary: Get a Project
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
    delete:
      summary: Delete a Project
      responses:
        '204':
          description: No Content
  '/{user-id}/project/{project-id}/exports':
    parameters:
      - schema:
          type: string
        name: user-id
        in: path
        required: true
      - schema:
          type: string
        name: project-id
        in: path
        required: true
    get:
      summary: List Project Exports
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Port'
    post:
      summary: ''
      responses:
        '200':
          description: OK
  '/{user-id}/project/{project-id}/imports':
    parameters:
      - schema:
          type: string
        name: user-id
        in: path
        required: true
      - schema:
          type: string
        name: project-id
        in: path
        required: true
    get:
      summary: List Project Imports
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Port'
    post:
      summary: Create a Project Import
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Port'
  '/{user-id}/project/{project-id}/imports/{port-id}':
    parameters:
      - schema:
          type: string
        name: user-id
        in: path
        required: true
      - schema:
          type: string
        name: project-id
        in: path
        required: true
      - schema:
          type: string
        name: port-id
        in: path
        required: true
    get:
      summary: Get a Project Import
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Port'
    delete:
      summary: Delete a Project Import
      responses:
        '200':
          description: OK
  '/{user-id}/project/{project-id}/exports/{port-id}':
    parameters:
      - schema:
          type: string
        name: user-id
        in: path
        required: true
      - schema:
          type: string
        name: project-id
        in: path
        required: true
      - schema:
          type: string
        name: port-id
        in: path
        required: true
    get:
      summary: Get a Project Export
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Port'
    delete:
      summary: Delete a Project Export
      responses:
        '200':
          description: OK
components:
  schemas:
    Project:
      title: Project
      description: This model represents a project.
      x-examples:
        example-1:
          id: '1'
          status: created
          import:
            - id: '1'
              port: port-owncloud
              properties:
                - type: filestorage
                  value: 'true'
          export:
            - id: '1'
              port: port-invenio
              properties:
                - type: filestorage
                  value: 'true'
                - type: metadata
                  value: 'true'
      type: object
      properties:
        userId:
          type: string
        status:
          type: integer
        portIn:
          type: array
          items:
            $ref: '#/components/schemas/Port'
        portOut:
          type: array
          items:
            $ref: '#/components/schemas/Port'
    Port:
      title: Port
      description: 'This model represents a port, which can be used in a project.'
      type: object
      properties:
        id:
          type: string
        port:
          type: string
        properties:
          type: array
          items:
            type: object
            description: ''
            properties:
              portType:
                type: string
                description: 'Only "metadata" and "filestorage" are currently supported as booleans. If type is not set, it defaults to false.'
              value:
                type: string
servers:
  - url: 'http://central-service_project-manager:3000/projects'
    description: ''
