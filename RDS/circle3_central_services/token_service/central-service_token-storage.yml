openapi: 3.0.0
info:
  title: central-service_token-storage
  version: '1.0'
servers:
  - url: 'http://central-service_token-storage:3000'
paths:
  /token:
    get:
      summary: Returns all tokens
      tags: []
      responses:
        '200':
          description: OK
    post:
      summary: Add a token
      responses:
        '200':
          description: OK
      description: Adds a token to repository.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/token'
  /user:
    get:
      summary: Returns user informations
      tags: []
      responses:
        '200':
          description: OK
      description: Returns informations from main oauth2-provider
    parameters: []
    post:
      summary: Adds a new user
      operationId: ''
      responses:
        '200':
          description: OK
  '/user/{user-id}':
    parameters:
      - schema:
          type: string
        name: user-id
        in: path
        required: true
    get:
      summary: Get user with id
      tags: []
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      description: ''
    delete:
      summary: Remove user
      operationId: ''
      responses:
        '200':
          description: OK
  '/token/{token-id}':
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
    parameters:
      - schema:
          type: string
        name: token-id
        in: path
        required: true
    put:
      summary: Update token
      responses:
        '200':
          description: OK
      description: Updates a token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/token'
  '/user/{user-id}/token':
    parameters:
      - schema:
          type: string
        name: user-id
        in: path
        required: true
    get:
      summary: Get tokens from specified user
      tags: []
      responses:
        '200':
          description: OK
    post:
      summary: Add a token
      operationId: ''
      responses:
        '200':
          description: OK
      description: Adds token to the repository.
  '/service/{servicename}':
    get:
      summary: Get specified service
      tags: []
      responses:
        '200':
          description: OK
    parameters:
      - schema:
          type: string
        name: servicename
        in: path
        required: true
  /service:
    get:
      summary: Returns all services
      tags: []
      responses:
        '200':
          description: OK
      operationId: ''
    post:
      summary: Adds a new service
      operationId: ''
      responses:
        '200':
          description: OK
  '/user/{user-id}/token/{token-id}':
    parameters:
      - schema:
          type: string
        name: user-id
        in: path
        required: true
      - schema:
          type: string
        name: token-id
        in: path
        required: true
    get:
      summary: Returns the specified token
      tags: []
      responses:
        '200':
          description: OK
      operationId: ''
      description: ''
    delete:
      summary: Remove token
      operationId: ''
      responses:
        '200':
          description: OK
components:
  schemas:
    token:
      title: Token
      type: object
      properties:
        id:
          type: string
          description: Set by service automatically
        servicename:
          type: string
        access_token:
          type: string
          description: 'The token, which can be used as password for username in service.'
        username:
          type: string
    User:
      title: User
      type: object
      properties:
        username:
          type: string
