apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "circle1_port_zenodo.fullname" . }}
  labels:
{{ include "circle1_port_zenodo.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "circle1_port_zenodo.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "circle1_port_zenodo.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      initContainers:
        - name: init-mysql
          image: busybox
          command: ['sh', '-c', 'until nslookup circle3-token-storage; do echo waiting for mysql; sleep 2; done;']
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: "ZENODO_OAUTH_AUTHORIZE_URL"
            value: {{ .Values.environment.ZENODO_ADDRESS }}/oauth/authorize?scope=deposit%3Awrite%20deposit%3Aactions&redirect_uri={{ .Values.environment.RDS_OAUTH_REDIRECT_URI }}&response_type=code&client_id={{ .Values.environment.ZENODO_OAUTH_CLIEND_ID }}
          - name: "ZENODO_OAUTH_ACCESS_TOKEN_URL"
            value: "{{ .Values.environment.ZENODO_OAUTH_ACCESS_TOKEN_URL }}"
          - name: "ZENODO_OAUTH_CLIEND_ID"
            value: "{{ .Values.environment.ZENODO_OAUTH_CLIEND_ID }}"
          - name: "ZENODO_ADDRESS"
            value: "{{ .Values.environment.ZENODO_ADDRESS }}"
          - name: "ZENODO_OAUTH_CLIENT_SECRET"
            value: "{{ .Values.environment.ZENODO_OAUTH_CLIENT_SECRET }}"
          - configMapRef:
            name: mservice
          - configMapRef:
            name: proxy
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /metrics
              port: http
          readinessProbe:
            httpGet:
              path: /metrics
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
